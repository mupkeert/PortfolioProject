Domain: Consumer Goods
Atliq Hardwares (imaginary company) is one of the leading computer hardware producers in India and well expanded in other countries too.

However, the management noticed that they do not get enough insights to make quick and smart data-informed decisions. They want to expand their data analytics team by adding several junior data analysts. Tony Sharma, their data analytics director wanted to hire someone who is good at both tech and soft skills. Hence, he decided to conduct a SQL challenge which will help him understand both the skills.

Task:  

Imagine yourself as the applicant for this role and perform the following task:


1.    Check ‘ad-hoc-requests.pdf’ - there are 10 ad hoc requests for which the business needs insights.
2.    You need to run a SQL query to answer these requests. 
3.    The target audience of this dashboard is top-level management - hence you need to create a presentation to show the insights.
4.    Be creative with your presentation, audio/video presentation will have more weightage.

1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

select distinct market from dim_customer
where customer = 'Atliq exclusive' and region = 'APAC';

-- 2.What is the percentage of unique product increase in 2021 vs. 2020? 

select  
count(distinct case when fiscal_year=2020 THEN product_code END ) as  unique_products_2020,
count(distinct case when fiscal_year=2021 THEN product_code END ) as  unique_products_2021,
(count(distinct case when fiscal_year=2021 THEN product_code END ) - count(distinct case when fiscal_year=2020 THEN product_code END ))/(count(distinct case when fiscal_year=2020 THEN product_code END ))*100 as percentage_chg
 from fact_sales_monthly;
 
 -- 3.Provide a report with all the unique product counts for each segment and sort them in descending order of product counts.
 
 select segment, count(Distinct product_code) as product_code from dim_product
 group by segment
 order by product_code DESC;
 
 -- 4.Which segment had the most increase in unique products in 2021 vs 2020?
 
 select segment, count(Distinct case when fact_sales_monthly.fiscal_year = 2020 Then fact_sales_monthly.product_code END) as product_count_2020, 
 count(Distinct case when fact_sales_monthly.fiscal_year = 2021 Then fact_sales_monthly.product_code END) as product_count_2021,
 (count(Distinct case when fact_sales_monthly.fiscal_year = 2021 Then fact_sales_monthly.product_code END) - count(Distinct case when fact_sales_monthly.fiscal_year = 2020 Then fact_sales_monthly.product_code END)) as difference
 from dim_product
 join fact_sales_monthly on dim_product.product_code = fact_sales_monthly.product_code
 group by segment
 order by difference DESC;
 
 -- 5.Get the products that have the highest and lowest manufacturing costs.
 
 select dim_product.product, fact_manufacturing_cost.product_code, fact_manufacturing_cost.manufacturing_cost from fact_manufacturing_cost
 Inner join dim_product on dim_product.product_code = fact_manufacturing_cost.product_code
 where manufacturing_cost = (select max(manufacturing_cost) from fact_manufacturing_cost) or manufacturing_cost = (select min(manufacturing_cost) from fact_manufacturing_cost) ;
 
 -- 6.Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market.
 
 select dim_customer.customer, dim_customer.customer_code, avg(fact_pre_invoice_deductions.pre_invoice_discount_pct) as average_discount_percentage from dim_customer
 join fact_pre_invoice_deductions on dim_customer.customer_code = fact_pre_invoice_deductions.customer_code
 where fact_pre_invoice_deductions.fiscal_year = 2021 and dim_customer.market = 'India'
 group by dim_customer.customer, dim_customer.customer_code
 order by average_discount_percentage DESC
 LIMIT 5;
 
 -- 7.Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month.
 
 select month(fact_sales_monthly.date) as `month`, year(fact_sales_monthly.date) as `year`, sum(gross_price) as gross_sales_amount from fact_sales_monthly
 join fact_gross_price on fact_sales_monthly.product_code = fact_gross_price.product_code
 group by `month`, `date`;
 
 -- 8.In which quarter of 2020, got the maximum total_sold_quantity?
 
 WITH cte7 AS (SELECT date,MONTH(date) AS Month,sold_quantity FROM fact_sales_monthly 
 WHERE fiscal_year=2020 )
 SELECT  CASE WHEN Month IN (9,10,11) THEN '1' 
									   WHEN Month IN (12,1,2) THEN '2' 
                                       WHEN Month IN (3,4,5) THEN '3 '
                                       WHEN Month IN (6,7,8) THEN '4' 
                                   END AS Quarter ,
								SUM(sold_quantity) AS total_sold_quantity   
FROM cte7  GROUP BY Quarter ORDER BY total_sold_quantity DESC  ; 
 
 -- 9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?
 
 WITH cte AS(SELECT dim_customer.channel channel,SUM(fact_sales_monthly.sold_quantity * fact_gross_price.gross_price) AS gross_sales_mln
FROM fact_sales_monthly LEFT JOIN fact_gross_price ON fact_sales_monthly.product_code = fact_gross_price.product_code
LEFT JOIN dim_customer ON fact_sales_monthly.customer_code = dim_customer.customer_code WHERE fact_sales_monthly.fiscal_year = 2021 GROUP BY dim_customer.channel)
SELECT channel, gross_sales_mln, ROUND(gross_sales_mln*100/(SELECT SUM(gross_sales_mln) FROM cte),2)percentage FROM cte
GROUP BY channel, gross_sales_mln 
ORDER BY gross_sales_mln DESC;
 
 
 -- 10.Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021?
 
 with cte as (select dim_product.product_code as product_code, division, product, Sum(sold_quantity) as total_sold_quantity, dense_rank() over(partition by division order by sum(sold_quantity)  DESC) as rank_order from dim_product
 join fact_sales_monthly on dim_product.product_code = fact_sales_monthly.product_code
 where fiscal_year = 2021
 group by division, dim_product.product_code, product)
 
 select product_code, division, product, total_sold_quantity, rank_order from cte
 where rank_order <=3;
 
 
 
 
